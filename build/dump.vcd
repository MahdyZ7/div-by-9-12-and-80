$date
	Mon Mar 27 07:12:58 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module adder $end
$var wire 1 ! a $end
$var wire 1 " b $end
$var wire 1 # s $end
$var wire 1 $ c $end
$upscope $end
$scope module testbench $end
$var wire 7 % clk_rx [6:0] $end
$var wire 1 & q $end
$var wire 1 ' count $end
$var reg 1 ( clk $end
$var reg 1 ) rst $end
$scope module counter $end
$var wire 1 ( clk $end
$var wire 1 ) rst $end
$var reg 7 * counter [6:0] $end
$upscope $end
$scope module dut $end
$var wire 1 + VDD $end
$var wire 1 , VSS $end
$var wire 1 ( clk $end
$var wire 1 ) reset $end
$var reg 6 - count [5:0] $end
$var reg 1 & out $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 -
z,
z+
b0 *
0)
1(
0'
0&
bz %
x$
x#
z"
z!
$end
#1
0(
#2
1'
b1 *
1&
b111100 -
1(
1)
#3
0(
#4
0'
b111101 -
b10 *
1(
#5
0(
#6
1'
b11 *
b111111 -
1(
#7
0(
#8
0'
b111110 -
b100 *
1(
#9
0(
#10
1'
b101 *
b111000 -
1(
#11
0(
#12
0'
b110100 -
b110 *
1(
#13
0(
#14
1'
b111 *
b110101 -
1(
#15
0(
#16
0'
b110111 -
b1000 *
1(
#17
0(
#18
1'
b1001 *
b110110 -
1(
#19
0(
#20
0'
b110000 -
b1010 *
1(
#21
0(
#22
1'
b1011 *
b101100 -
1(
#23
0(
#24
0'
b101101 -
b1100 *
1(
#25
0(
#26
1'
b1101 *
b101111 -
1(
#27
0(
#28
0'
b101110 -
b1110 *
1(
#29
0(
#30
1'
b1111 *
b101000 -
1(
#31
0(
#32
0'
b100100 -
b10000 *
1(
#33
0(
#34
1'
b10001 *
b100101 -
1(
#35
0(
#36
0'
b100111 -
b10010 *
1(
#37
0(
#38
1'
b10011 *
b100110 -
1(
#39
0(
#40
0'
b100000 -
b10100 *
1(
#41
0(
#42
1'
b10101 *
b11100 -
1(
#43
0(
#44
0'
b11101 -
b10110 *
1(
#45
0(
#46
1'
b10111 *
b11111 -
1(
#47
0(
#48
0'
b11110 -
b11000 *
1(
#49
0(
#50
1'
b11001 *
b11000 -
1(
#51
0(
#52
0'
b10100 -
b11010 *
1(
#53
0(
#54
1'
b11011 *
b10101 -
1(
#55
0(
#56
0'
b10111 -
b11100 *
1(
#57
0(
#58
1'
b11101 *
b10110 -
1(
#59
0(
#60
0'
b10000 -
b11110 *
1(
#61
0(
#62
1'
b11111 *
b1100 -
1(
#63
0(
#64
0'
b1101 -
b100000 *
1(
#65
0(
#66
1'
b100001 *
b1111 -
1(
#67
0(
#68
0'
b1110 -
b100010 *
1(
#69
0(
#70
1'
b100011 *
b1000 -
1(
#71
0(
#72
0'
b100 -
b100100 *
1(
#73
0(
#74
1'
b100101 *
b101 -
1(
#75
0(
#76
0'
b111 -
b100110 *
1(
#77
0(
#78
1'
b100111 *
b110 -
1(
#79
0(
#80
0'
b0 -
b101000 *
1(
#81
0(
#82
1'
b101001 *
0&
b111100 -
1(
#83
0(
#84
0'
b111101 -
b101010 *
1(
#85
0(
#86
1'
b101011 *
b111111 -
1(
#87
0(
#88
0'
b111110 -
b101100 *
1(
#89
0(
#90
1'
b101101 *
b111000 -
1(
#91
0(
#92
0'
b110100 -
b101110 *
1(
#93
0(
#94
1'
b101111 *
b110101 -
1(
#95
0(
#96
0'
b110111 -
b110000 *
1(
#97
0(
#98
1'
b110001 *
b110110 -
1(
#99
0(
#100
0'
b110000 -
b110010 *
1(
#101
0(
#102
1'
b110011 *
b101100 -
1(
#103
0(
#104
0'
b101101 -
b110100 *
1(
#105
0(
#106
1'
b110101 *
b101111 -
1(
#107
0(
#108
0'
b101110 -
b110110 *
1(
#109
0(
#110
1'
b110111 *
b101000 -
1(
#111
0(
#112
0'
b100100 -
b111000 *
1(
#113
0(
#114
1'
b111001 *
b100101 -
1(
#115
0(
#116
0'
b100111 -
b111010 *
1(
#117
0(
#118
1'
b111011 *
b100110 -
1(
#119
0(
#120
0'
b100000 -
b111100 *
1(
#121
0(
#122
1'
b111101 *
b11100 -
1(
#123
0(
#124
0'
b11101 -
b111110 *
1(
#125
0(
#126
1'
b111111 *
b11111 -
1(
#127
0(
#128
0'
b11110 -
b1000000 *
1(
#129
0(
#130
1'
b1000001 *
b11000 -
1(
#131
0(
#132
0'
b10100 -
b1000010 *
1(
#133
0(
#134
1'
b1000011 *
b10101 -
1(
#135
0(
#136
0'
b10111 -
b1000100 *
1(
#137
0(
#138
1'
b1000101 *
b10110 -
1(
#139
0(
#140
0'
b10000 -
b1000110 *
1(
#141
0(
#142
1'
b1000111 *
b1100 -
1(
#143
0(
#144
0'
b1101 -
b1001000 *
1(
#145
0(
#146
1'
b1001001 *
b1111 -
1(
#147
0(
#148
0'
b1110 -
b1001010 *
1(
#149
0(
#150
1'
b1001011 *
b1000 -
1(
#151
0(
#152
0'
b100 -
b1001100 *
1(
#153
0(
#154
1'
b1001101 *
b101 -
1(
#155
0(
#156
0'
b111 -
b1001110 *
1(
#157
0(
#158
1'
b1001111 *
b110 -
1(
#159
0(
#160
0'
b0 -
b1010000 *
1(
#161
0(
#162
1'
b1010001 *
1&
b111100 -
1(
#163
0(
#164
0'
b111101 -
b1010010 *
1(
#165
0(
#166
1'
b1010011 *
b111111 -
1(
#167
0(
#168
0'
b111110 -
b1010100 *
1(
#169
0(
#170
1'
b1010101 *
b111000 -
1(
#171
0(
#172
0'
b110100 -
b1010110 *
1(
